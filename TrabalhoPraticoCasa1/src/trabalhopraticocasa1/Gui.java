package trabalhopraticocasa1;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author gabrielozaki
 */
public class Gui extends javax.swing.JFrame {

    /**
     * Creates new form Gui
     */
    public Gui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        HField = new javax.swing.JTextField();
        SField = new javax.swing.JTextField();
        LField = new javax.swing.JTextField();
        RField = new javax.swing.JTextField();
        GField = new javax.swing.JTextField();
        BField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        HField.setText("0");
        HField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HFieldActionPerformed(evt);
            }
        });
        HField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                HFieldKeyReleased(evt);
            }
        });

        SField.setText("0");
        SField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SFieldKeyReleased(evt);
            }
        });

        LField.setText("0");
        LField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                LFieldKeyReleased(evt);
            }
        });

        RField.setText("0");
        RField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RFieldActionPerformed(evt);
            }
        });
        RField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                RFieldKeyReleased(evt);
            }
        });

        GField.setText("0");
        GField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                GFieldKeyReleased(evt);
            }
        });

        BField.setText("0");
        BField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                BFieldKeyReleased(evt);
            }
        });

        jLabel1.setText("H");

        jLabel2.setText("S");

        jLabel3.setText("L");

        jLabel4.setText("R");

        jLabel5.setText("G");

        jLabel6.setText("B");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(SField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(LField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(HField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(GField, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(RField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BField, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(SField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(GField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(BField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(67, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void HFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HFieldActionPerformed

    private void RFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RFieldActionPerformed

    private void RFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RFieldKeyReleased
        // TODO add your handling code here:
        RGBHSL();
    }//GEN-LAST:event_RFieldKeyReleased

    private void GFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_GFieldKeyReleased
        // TODO add your handling code here:
        RGBHSL();
    }//GEN-LAST:event_GFieldKeyReleased

    private void BFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BFieldKeyReleased
        // TODO add your handling code here:
        RGBHSL();
    }//GEN-LAST:event_BFieldKeyReleased

    private void HFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_HFieldKeyReleased
        // TODO add your handling code here:
        HSLRGB();
    }//GEN-LAST:event_HFieldKeyReleased

    private void SFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SFieldKeyReleased
        // TODO add your handling code here:
        HSLRGB();
    }//GEN-LAST:event_SFieldKeyReleased

    private void LFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_LFieldKeyReleased
        // TODO add your handling code here:
        HSLRGB();
    }//GEN-LAST:event_LFieldKeyReleased

    private void HSLRGB(){
        
        //Converte de HSL para RGB
        int r,g,b;
        double h,s,l,c,x,ri = 0,gi = 0,bi = 0,m;
        
        //Pega os valores HSL
        h = Integer.parseInt("0" + HField.getText());
        s = Integer.parseInt("0" + SField.getText())/100.0;
        l = Integer.parseInt("0" + LField.getText())/100.0;
        
        //formula intermediaria
        //C= 1 - |2L - 1|*S
        c = (1 - Math.abs((2*l)-1))*s;
        
        //Segunda formula intermediaria
        //X = C*(1 - |h/60 mod 2 -1|
        x = c*(1-Math.abs(((h/60)%2)-1));
        
        //Os R' G' e B' sao definidos com base no angulo de H
        if(h>=0 && h<60 || h==360){
            ri = c;
            gi = x;
            bi = 0;
        }else if(h>=60 && h<120){
            ri = x;
            gi = c;
            bi = 0;
        }else if(h>=120 && h<180){
            ri = 0;
            gi = c;
            bi = x;
        }else if(h>=180 && h<240){
            ri = 0;
            gi = x;
            bi = c;
        }else if(h>=240 && h<300){
            ri = x;
            gi = 0;
            bi = c;
        }else if(h>=240 && h<360){
            ri = c;
            gi = 0;
            bi = x;
        }
        //Terceira formula intermediaria
        //M = L - c/2
        m = l - (c/2);
        
        //Definicao do RGB
        //R = (r'+m)*255
        r = (int) ((ri+m)*255);
        g = (int) ((gi+m)*255);
        b = (int) ((bi+m)*255);
        
        RField.setText(r+"");
        GField.setText(g+"");
        BField.setText(b+"");
        
    }
    private void RGBHSL() {
        //Converte de RGB para HSL
        int r, g, b, h;
        double  s,l,ri, gi, bi, cmax, cmin, delta;

        //Pega os valores RGB
        r = Integer.parseInt("0" + RField.getText());
        g = Integer.parseInt("0" + GField.getText());
        b = Integer.parseInt("0" + BField.getText());

        //o R',G' e B' devem estar entre 1 e 0
        ri = (double) r / 255.0;
        gi = (double) g / 255.0;
        bi = (double) b / 255.0;
        //Formula secondaria
        //Cmax é o maximo entre r',g',b'
        cmax = Math.max(Math.max(ri, gi), bi);
        //Cminx é o minimo entre r',g',b'
        cmin = Math.min(Math.min(ri, gi), bi);
        delta = cmax - cmin;
        //Lminosidade é a media entre ambos
        l = ((cmax+cmin)/2);
        //Se o delta é diferente de zero
        //Executamos a formula
        if (delta != 0) {
            //A formula varia conforme os maximos e minimos
            if (ri >= gi && ri >= bi) {
                //H = 60 * ((g'-b')/Delta mod6)
                h = (int) (60 * (((gi - bi) / delta) % 6));
            } else if (gi > ri && gi >= bi) {
                h = (int) (60 * (((bi - ri) / delta) + 2));
            } else {
                h = (int) (60 * (((ri - gi) / delta) + 4));
            }
            //Define o s
            //S = delta/(1 - |2L - 1|)
            s = (delta/(1-Math.abs((2*l)-1)));
        }else{
            //Colocamos zero diretamente
            //Isso se deve se aplicarmos a formula, temos divisao por zero
            h = 0;
            s=0;
        }
        //H pode ser negativo, como é angulo, -60 vira 300
        if(h>=0)
            HField.setText(h+"");
        else
            HField.setText(360+h+"");
        SField.setText(( Math.round(s*100))+"");
        LField.setText((  Math.round(l*100))+"");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BField;
    private javax.swing.JTextField GField;
    private javax.swing.JTextField HField;
    private javax.swing.JTextField LField;
    private javax.swing.JTextField RField;
    private javax.swing.JTextField SField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    // End of variables declaration//GEN-END:variables
}
